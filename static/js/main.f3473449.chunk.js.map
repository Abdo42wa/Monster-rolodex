{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list-component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","monster","name","src","id","email","CardList","monsters","map","SearchBox","placeholder","handelChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAIaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAKF,EAAMG,QAAQC,KAAMC,IAAG,+BAA0BL,EAAMG,QAAQG,GAAxC,eACjC,mCAAMN,EAAMG,QAAQC,QACpB,kCAAKJ,EAAMG,QAAQI,aCFdC,EAAW,SAAAR,GAAK,OAGrB,aAFA,CAEA,OAAKC,UAAU,YAAf,SACCD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,UCRlBK,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OAEjB,8BACI,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAYF,QCiDTG,E,kDAnDX,aAAe,IAAD,8BACZ,gBAkBFH,aAAe,SAAAI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAjBpC,EAAKC,MAAQ,CAEXb,SAAU,GACVU,YAAa,IANH,E,qDAad,WAAsB,IAAD,OACnBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,oBAO5C,WAAW,IAAD,EAEwBC,KAAKN,MAA9Bb,EAFC,EAEDA,SAAUU,EAFT,EAESA,YACXU,EAAmBpB,EAASqB,QAAQ,SAAA3B,GAAO,OAE/CA,EAAQC,KAAK2B,cAAcC,SAASb,EAAYY,kBAIlD,OACE,sBAAK9B,UAAU,MAAf,UAEA,oBAAIA,UAAU,GAAd,8BACA,cAAC,EAAD,CACAW,YAAa,iBACbC,aAAce,KAAKf,eAEnB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA1CRI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f3473449.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img alt={props.monster.name} src={`https://robohash.org/${props.monster.id}?set=set2`} />\r\n        <h2> {props.monster.name}</h2>\r\n        <p> {props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react'\r\nimport './card-list.styles.css'\r\n\r\nimport {Card} from '../card/card.component'\r\n\r\n\r\nexport const CardList = props => (\r\n        // props.childe is any thing thst will be in side the comonent tag \r\n   \r\n        <div className='card-list'>\r\n        {props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster}/>\r\n        ))}\r\n</div> \r\n);\r\n","import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({placeholder,handelChange}) => \r\n    (\r\n        <div>\r\n            <input \r\n            className='search' \r\n            type='search' \r\n            placeholder={placeholder} \r\n            onChange = {handelChange}\r\n\r\n            />\r\n        </div>\r\n    )\r\n","import React,{Component} from 'react'\nimport './App.css';\nimport {CardList} from './components/card-list/card-list-component'\nimport {SearchBox} from './components/search-box/search-box.component'\n\n\nclass App extends Component {\n\n    constructor() {\n      super();\n\n      this.state = {\n\n        monsters: [  ],\n        searchField: ''\n      }\n\n      //this.handelChange = this.handelChange.bind(this);\n\n    }\n\n    componentDidMount () {\n      fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({monsters: users}))\n    }\n\n    handelChange = e  => {\n     this.setState({searchField: e.target.value})\n    }\n\n  render () {\n\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter( monster => \n\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n\n      )\n\n    return (\n      <div className=\"App\">\n\n      <h1 className=''>Monsters Rolodex</h1>\n      <SearchBox \n      placeholder ='search monster' \n      handelChange={this.handelChange} \n      />\n      <CardList monsters={filteredMonsters}/>\n      \n     \n\n        \n    </div>\n    )\n    \n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}